(function() {var implementors = {};
implementors["bare_metal"] = [{"text":"impl&lt;T&gt; Unpin for Peripheral&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CriticalSection","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["riscv"] = [{"text":"impl Unpin for Uie","synthetic":true,"types":[]},{"text":"impl Unpin for Ustatus","synthetic":true,"types":[]},{"text":"impl Unpin for Utvec","synthetic":true,"types":[]},{"text":"impl Unpin for Ucause","synthetic":true,"types":[]},{"text":"impl Unpin for Uip","synthetic":true,"types":[]},{"text":"impl Unpin for FCSR","synthetic":true,"types":[]},{"text":"impl Unpin for Flags","synthetic":true,"types":[]},{"text":"impl Unpin for Flag","synthetic":true,"types":[]},{"text":"impl Unpin for RoundingMode","synthetic":true,"types":[]},{"text":"impl Unpin for Scounteren","synthetic":true,"types":[]},{"text":"impl Unpin for Sie","synthetic":true,"types":[]},{"text":"impl Unpin for Sstatus","synthetic":true,"types":[]},{"text":"impl Unpin for SPP","synthetic":true,"types":[]},{"text":"impl Unpin for Stvec","synthetic":true,"types":[]},{"text":"impl Unpin for Scause","synthetic":true,"types":[]},{"text":"impl Unpin for Trap","synthetic":true,"types":[]},{"text":"impl Unpin for Interrupt","synthetic":true,"types":[]},{"text":"impl Unpin for Exception","synthetic":true,"types":[]},{"text":"impl Unpin for Sip","synthetic":true,"types":[]},{"text":"impl Unpin for Satp","synthetic":true,"types":[]},{"text":"impl Unpin for Marchid","synthetic":true,"types":[]},{"text":"impl Unpin for Mimpid","synthetic":true,"types":[]},{"text":"impl Unpin for Mvendorid","synthetic":true,"types":[]},{"text":"impl Unpin for Mcounteren","synthetic":true,"types":[]},{"text":"impl Unpin for Medeleg","synthetic":true,"types":[]},{"text":"impl Unpin for Mideleg","synthetic":true,"types":[]},{"text":"impl Unpin for Mie","synthetic":true,"types":[]},{"text":"impl Unpin for Misa","synthetic":true,"types":[]},{"text":"impl Unpin for MXL","synthetic":true,"types":[]},{"text":"impl Unpin for Mstatus","synthetic":true,"types":[]},{"text":"impl Unpin for XS","synthetic":true,"types":[]},{"text":"impl Unpin for FS","synthetic":true,"types":[]},{"text":"impl Unpin for MPP","synthetic":true,"types":[]},{"text":"impl Unpin for SPP","synthetic":true,"types":[]},{"text":"impl Unpin for Mtvec","synthetic":true,"types":[]},{"text":"impl Unpin for TrapMode","synthetic":true,"types":[]},{"text":"impl Unpin for Mcause","synthetic":true,"types":[]},{"text":"impl Unpin for Trap","synthetic":true,"types":[]},{"text":"impl Unpin for Interrupt","synthetic":true,"types":[]},{"text":"impl Unpin for Exception","synthetic":true,"types":[]},{"text":"impl Unpin for Mip","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()