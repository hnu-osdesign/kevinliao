(function() {var implementors = {};
implementors["bare_metal"] = [{"text":"impl&lt;T&gt; !Send for Peripheral&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Send for CriticalSection","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["riscv"] = [{"text":"impl Send for Uie","synthetic":true,"types":[]},{"text":"impl Send for Ustatus","synthetic":true,"types":[]},{"text":"impl Send for Utvec","synthetic":true,"types":[]},{"text":"impl Send for Ucause","synthetic":true,"types":[]},{"text":"impl Send for Uip","synthetic":true,"types":[]},{"text":"impl Send for FCSR","synthetic":true,"types":[]},{"text":"impl Send for Flags","synthetic":true,"types":[]},{"text":"impl Send for Flag","synthetic":true,"types":[]},{"text":"impl Send for RoundingMode","synthetic":true,"types":[]},{"text":"impl Send for Scounteren","synthetic":true,"types":[]},{"text":"impl Send for Sie","synthetic":true,"types":[]},{"text":"impl Send for Sstatus","synthetic":true,"types":[]},{"text":"impl Send for SPP","synthetic":true,"types":[]},{"text":"impl Send for Stvec","synthetic":true,"types":[]},{"text":"impl Send for Scause","synthetic":true,"types":[]},{"text":"impl Send for Trap","synthetic":true,"types":[]},{"text":"impl Send for Interrupt","synthetic":true,"types":[]},{"text":"impl Send for Exception","synthetic":true,"types":[]},{"text":"impl Send for Sip","synthetic":true,"types":[]},{"text":"impl Send for Satp","synthetic":true,"types":[]},{"text":"impl Send for Marchid","synthetic":true,"types":[]},{"text":"impl Send for Mimpid","synthetic":true,"types":[]},{"text":"impl Send for Mvendorid","synthetic":true,"types":[]},{"text":"impl Send for Mcounteren","synthetic":true,"types":[]},{"text":"impl Send for Medeleg","synthetic":true,"types":[]},{"text":"impl Send for Mideleg","synthetic":true,"types":[]},{"text":"impl Send for Mie","synthetic":true,"types":[]},{"text":"impl Send for Misa","synthetic":true,"types":[]},{"text":"impl Send for MXL","synthetic":true,"types":[]},{"text":"impl Send for Mstatus","synthetic":true,"types":[]},{"text":"impl Send for XS","synthetic":true,"types":[]},{"text":"impl Send for FS","synthetic":true,"types":[]},{"text":"impl Send for MPP","synthetic":true,"types":[]},{"text":"impl Send for SPP","synthetic":true,"types":[]},{"text":"impl Send for Mtvec","synthetic":true,"types":[]},{"text":"impl Send for TrapMode","synthetic":true,"types":[]},{"text":"impl Send for Mcause","synthetic":true,"types":[]},{"text":"impl Send for Trap","synthetic":true,"types":[]},{"text":"impl Send for Interrupt","synthetic":true,"types":[]},{"text":"impl Send for Exception","synthetic":true,"types":[]},{"text":"impl Send for Mip","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()